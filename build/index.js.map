{"version":3,"sources":["../index.js"],"names":["process","env","ConnectionString","PORT","pubsub","PubSub","server","ApolloServer","typeDefs","resolvers","context","req","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","console","log","listen","port","url","err","error"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;mBAEmCA,OAAO,CAACC,G;IAAnCC,gB,gBAAAA,gB;IAAkBC,I,gBAAAA,I;AAC1B,IAAMC,MAAM,GAAG,IAAIC,oBAAJ,EAAf;AAEA,IAAMC,MAAM,GAAG,IAAIC,0BAAJ,CAAiB;AAC9BC,EAAAA,QAAQ,EAARA,oBAD8B;AAE9BC,EAAAA,SAAS,EAATA,qBAF8B;AAG9BC,EAAAA,OAAO,EAAE;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,WAAc;AAAEA,MAAAA,GAAG,EAAHA,GAAF;AAAOP,MAAAA,MAAM,EAANA;AAAP,KAAd;AAAA;AAHqB,CAAjB,CAAf;;AAMAQ,qBACGC,OADH,CACWX,gBADX,EAC6B;AAAEY,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAD7B,EAEGC,IAFH,CAEQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,SAAOZ,MAAM,CAACa,MAAP,CAAc;AAAEC,IAAAA,IAAI,EAAEjB;AAAR,GAAd,CAAP;AACD,CALH,EAMGa,IANH,CAMQ;AAAA,MAAGK,GAAH,SAAGA,GAAH;AAAA,SAAaJ,OAAO,CAACC,GAAR,6BAAiCG,GAAjC,EAAb;AAAA,CANR,WAOS,UAAAC,GAAG,EAAI;AACZL,EAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACD,CATH","sourcesContent":["import \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport { ApolloServer, PubSub } from 'apollo-server';\nimport mongoose from 'mongoose';\nimport { config } from 'dotenv';\nimport typeDefs from './graphql/typeDefs';\nimport resolvers from './graphql/resolvers';\n\nconfig();\n\nconst { ConnectionString, PORT } = process.env;\nconst pubsub = new PubSub();\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  context: ({ req }) => ({ req, pubsub })\n});\n\nmongoose\n  .connect(ConnectionString, { useNewUrlParser: true, useUnifiedTopology: true })\n  .then(() => {\n    console.log('Database Connected');\n    return server.listen({ port: PORT });\n  })\n  .then(({ url }) => console.log(`Server Started at ${url}`))\n  .catch(err => {\n    console.error(err);\n  });\n"],"file":"index.js"}