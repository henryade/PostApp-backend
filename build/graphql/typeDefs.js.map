{"version":3,"sources":["../../graphql/typeDefs.js"],"names":["gql"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAEA;mBAEeA,iB","sourcesContent":["import { gql } from 'apollo-server';\n\n// comments :[Comment!]! means there musut be at least one comment inside the array and it must return an array\n\nexport default gql`\n  type Post {\n    id: ID!\n    body: String!\n    createdAt: String!\n    username: String!\n    comments: [Comment]!\n    likes: [Like]!\n    likeCount: Int!\n    commentCount: Int!\n  }\n  type Comment {\n    id: ID!\n    body: String!\n    createdAt: String!\n    username: String!\n  }\n  type Like {\n    id: ID!\n    createdAt: String!\n    username: String!\n  }\n  type User {\n    id: ID!\n    email: String!\n    username: String!\n    token: String!\n    createdAt: String!\n  }\n  input RegisterInput {\n    username: String!\n    password: String!\n    confirmPassword: String!\n    email: String!\n  }\n  input LoginInput {\n    username: String!\n    password: String!\n  }\n  type Query {\n    getPosts: [Post]\n    getPost(postId: ID!): Post\n  }\n  type Mutation {\n    register(registerInput: RegisterInput): User!\n    login(loginInput: LoginInput): User!\n    createPost(body: String!): Post!\n    deletePost(postId: ID!): String!\n    createComment(postId: ID!, body: String!): Post!\n    deleteComment(postId: ID!, commentId: ID!): Post!\n    likePost(postId: ID!): Post!\n  }\n  type Subscription {\n    newPost: Post!\n  }\n`;"],"file":"typeDefs.js"}